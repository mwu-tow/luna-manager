# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - "*"

variables:
  System.Debug: true

jobs:
- job: Ubuntu
  timeoutInMinutes: 0
  pool:
    vmImage: 'Ubuntu-16.04'
  container:
    image: murbanczyk/studio-builder:latest
    options: --cap-add SYS_ADMIN --cap-add MKNOD --device=/dev/fuse --security-opt apparmor:unconfined
  steps:
  - script: >
      pwd
      && env
      && ls -l
      && sudo apt-get install -y fuse
      && stack run develop luna-studio
      && stack run make-package ~/luna-develop/apps/luna-studio/luna-package.yaml 2.0
      && echo "=========================================================================="
      && ls -laR /home/vsts_azpcontainer/luna-develop/apps/luna-studio/dist-package
      && mkdir $(Build.ArtifactStagingDirectory)/AppImage
      && cp    ~/luna-develop/apps/luna-studio/dist-package/appimage/out/* $(Build.ArtifactStagingDirectory)/AppImage/
      && cp -r ~/luna-develop/apps/luna-studio/dist-package/luna-studio/   $(Build.ArtifactStagingDirectory)/luna-studio
      && cp    ~/luna-develop/apps/luna-studio/dist-package/luna-studio/   $(Build.ArtifactStagingDirectory)/luna-studio
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)/AppImage
      artifactName: Linux AppImage
    displayName: 'Upload artifacts'
    continueOnError: true
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)/luna-studio
      artifactName: Linux Luna Studio dist package
    continueOnError: true
- job: macOS
  timeoutInMinutes: 0
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - script: >
      curl -sSL https://get.haskellstack.org/ | sh
      && brew update
      && brew install pkg-config libffi zmq
      && eval $(brew shellenv)
      && export LDFLAGS="-L/usr/local/opt/libffi/lib"
      && export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig"
      && stack --version
      && stack run develop luna-studio
      && stack run make-package ~/luna-develop/apps/luna-studio/luna-package.yaml 2.0
      && cp -r ~/luna-develop/apps/luna-studio/dist-package/luna-studio-*   $(Build.ArtifactStagingDirectory)/luna-studio
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)/luna-studio
      artifactName: DarwinArtifact2
    continueOnError: true