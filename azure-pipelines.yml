# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - "*"

jobs:
- job: Ubuntu
  timeoutInMinutes: 0
  pool:
    vmImage: 'Ubuntu-16.04'
  container:
    image: murbanczyk/studio-builder:latest
    options: --cap-add SYS_ADMIN --cap-add MKNOD --device=/dev/fuse --security-opt apparmor:unconfined
  steps:
  - script: >
      pwd
      && env
      && ls -l
      && sudo apt-get install -y fuse
      && stack build
      && stack run develop luna-studio
      && stack run make-package ~/luna-develop/apps/luna-studio/luna-package.yaml 2.0
      && ls -la /home/vsts_azpcontainer/luna-develop/apps/luna-studio/dist-package
      && echo "=========================================================================="
      && ls -laR /home/vsts_azpcontainer/luna-develop/apps/luna-studio/dist-package
#      cat /home/vsts/luna-develop/apps/luna-studio/build-config/backend/.stack-work/logs/zeromq4-haskell-0.7.0.log

    displayName: 'Build Linux'
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: /home/vsts_azpcontainer/luna-develop/apps/luna-studio/dist-package
      artifactName: dist
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)
      artifactName: dist2
- job: macOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - script: |
      curl -sSL https://get.haskellstack.org/ | sh
      brew update
      brew install pkg-config libffi zmq
      stack build
      stack run develop luna-studio
      stack run make-package ~/luna-develop/apps/luna-studio/luna-package.yaml 2.0